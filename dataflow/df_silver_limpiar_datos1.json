{
	"name": "df_silver_limpiar_datos1",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_bronze_datos",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_datos",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "cast1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          fecha_inicio as string,",
				"          fecha_fin as string,",
				"          numero as string,",
				"          imei as string,",
				"          rbs_utilizada as string,",
				"          celda as string,",
				"          latitud_logitud as string,",
				"          subidos as string,",
				"          descargados as string,",
				"          total as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(Coord_limpia = trim(replace(latitud_logitud, ',', '.'))) ~> derivedColumn1",
				"derivedColumn1 derive(Coord_division_temp = split(Coord_limpia, '.')) ~> derivedColumn2",
				"derivedColumn2 derive(latitud = toDecimal(Coord_division_temp[1] + '.' + Coord_division_temp[2], 10, 6),",
				"          longitud = toDecimal(Coord_division_temp[3] + '.' + Coord_division_temp[4], 10, 6)) ~> derivedColumn3",
				"derivedColumn3 cast(output(",
				"          fecha_inicio as timestamp 'dd/MM/yyyy HH:mm',",
				"          fecha_fin as timestamp 'dd/MM/yyyy HH:mm',",
				"          subidos as integer,",
				"          descargados as integer,",
				"          total as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 select(mapColumn(",
				"          fecha_inicio,",
				"          fecha_fin,",
				"          numero,",
				"          imei,",
				"          rbs_utilizada,",
				"          celda,",
				"          subidos,",
				"          descargados,",
				"          total,",
				"          latitud,",
				"          longitud",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fecha_inicio as timestamp,",
				"          fecha_fin as timestamp,",
				"          numero as string,",
				"          imei as string,",
				"          rbs_utilizada as string,",
				"          celda as string,",
				"          latitud as decimal(18,0),",
				"          longitud as decimal(18,0),",
				"          subidos as integer,",
				"          descargados as integer,",
				"          total as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}